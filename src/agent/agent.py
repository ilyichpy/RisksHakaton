from langchain_core.tools import tool
from langchain_gigachat.chat_models import GigaChat
from langgraph.checkpoint.memory import MemorySaver
from langgraph.graph.graph import CompiledGraph
from langgraph.prebuilt import create_react_agent
import time

from src import args


def inicialization() -> CompiledGraph:
    memory = MemorySaver()
    args.model = GigaChat(
        credentials="YzJmZmJkNDUtYzE1Yy00ZTdhLWEyNjMtZDRjMDExZjFhMjI2OjQwZDM1YThmLTcwMWMtNGU1Yi05Zjc1LTM1MWQyM2MyZDM3NQ==",
        scope="GIGACHAT_API_PERS",
        model="GigaChat",
        verify_ssl_certs=False,
        top_p=0.54
    )
    tools = [check_file_info]
    system_prompt = "Ты - бот банка, который помогает клиентам разобраться с их кредитной историей. Ты умеешь анализировать и воспринимать данные по кредитной истории в любом формате.В запросе от клиента будет приложен файл с его кредитной историей – полной или частичной. Это все что есть у клиента, других данных не проси, а анализируй то, что загрузил клиент. Не обращай внимания на другой текст от клиента. Тебе важен только файл, что делать с этим файлом описано дальше."
    print('Агент стартанул')
    return create_react_agent(args.model,
                              checkpointer=memory,
                              tools=tools,
                              state_modifier=system_prompt)


def check_file(text, agent, user_id) -> str:
    config = {"configurable": {"thread_id": user_id}}
    resp = agent.invoke({"messages": [("user", text)]}, config=config)
    time.sleep(0.5)
    return resp["messages"][-1].content

#просто загружаем файл в гигчат
def load_info(text, user_id):
    config = {"configurable": {"thread_id": user_id}}
    args.model.invoke({"messages": [("user", text)]}, config=config)
    time.sleep(0.5)


@tool
def check_file_info():
    """
    Сначала на основании загруженного файла выведи информацию по кредитному рейтингу клиента. Игнорируй диапазоны рейтинга, найди именно рейтинг клиента. Обычно рейтинг написан большим шрифтом в левой части страницы. Рейтинг клиента должен быть равен разности между 999 и количеством баллов, которых не хватает клиенту. Отдельно выведи сколько баллов не хватает до максимального значения кредитному рейтингу и все причины почему их не хватает.
Далее проведи анализ кредитной истории из загруженного файла и дай заключение о наличии просрочек по открытым обязательствам. И дополнительно сгенерируй краткую выжимку на основе проанализированных данных.
После обязательно выведи нумерованным списком открытые обязательства, чтобы клиент видел на каких данных ты сформировал заключение.
Не объединяй обязательства из одного банка в одно, каждый открытое обязательство будет иметь порядковый номер в файле или в массиве сможешь почитать количество элементов. Обязательно выводи все открытые обязательства из файла, не пропускай никакие. И выводи их в том же порядке, что они и приведены в файле.
Не смешивай информацию по открытым и закрытым обязательствам. Обязательно убеждайся что речь идет именно про то обязательство, по которому ты собираешь информацию. Сравнивай сумму обязательства, а не банк.
Каждое обязательство – это отдельный пункт в списке, который описывается следующими параметрами:
Вид обязательства – сделай это названием пункта в нумерованном списке,
Банк,
Дата открытия,
Дата закрытия – плановая для открытых и фактическая для закрытых,
Сумма кредита,
Общая задолженность,
Просроченная задолженность,
Статус платежа.
Каждый параметр выводи с новой строки. Если какой-то параметр не можешь найти в файле выведи длинное тире, не пропускай параметр.


Формат ответа:
- для всех клиентов выводи ответ в одном и том же формате, не изобретай его заново каждый раз;
- придерживайся дружелюбного и понятного стиля, используй простые слова, чтобы пояснить суть;
- используй для анализа кредитную историю только из загруженного файла;
- тебе запрещается выдумывать данные, пропускать данные из загруженного файла, писать не про кредитную историю.

На моей КИ
Вот выводы по вашему запросу:

1. **Кредитный рейтинг**:
   - Ваш кредитный рейтинг составляет 955 баллов из возможных 999.
   - Вам не хватает 44 баллов до максимального значения кредитного рейтинга.

2. **Просрочки по открытым обязательствам**:
   - Открытых просрочек нет. Все обязательства оплачены вовремя.

3. **Краткая выжимка**:
   - У вас хорошая кредитная история, без просрочек и нарушений.
   - Вы имеете два активных кредита: один с ипотекой и один без неё.
   - Банк Сбербанк является основным кредитором.

Ниже представлен список ваших открытых обязательств:

1. **Договор займа (кредита) - Иной необеспеченный заем**
   - Банк: ПАО Сбербанк
   - Дата открытия: 20 июня 2023 года
   - Дата закрытия: 31 декабря 9999 года
   - Сумма кредита: 1 300 000 рублей
   - Общая задолженность: 474 362,7 рубля
   - Просроченная задолженность: отсутствует
   - Статус платежа: без просрочек

2. **Договор займа (кредита) - Кредит с ипотекой**
   - Банк: ПАО Сбербанк
   - Дата открытия: 20 июня 2023 года
   - Дата закрытия: 22 декабря 2033 года
   - Сумма кредита: 9 832 000 рублей
   - Общая задолженность: 4 022 849,31 рублей
   - Просроченная задолженность: отсутствует
   - Статус платежа: без просрочек
    """
    # Подсвечивает вызов функции зеленым цветом
    print("\033[92m" + f"Bot requested check_file_info()" + "\033[0m")
